name: Build
on:
  push:
    branches:
      - main
  pull_request:
jobs:
  run:
    strategy:
      matrix:
        os:
          - ubuntu-latest
            #- windows-latest
            #- macos-latest
        ocaml-compiler:
          - '4.08'
          - '4.14'
          - '5.1'
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - uses: ocaml/setup-ocaml@v2
      with:
        ocaml-compiler: ${{ matrix.ocaml-compiler }}
        allow-prerelease-opam: true
        dune-cache: true
    - run: opam pin -n .
    - run: opam depext -yt smtlib-utils
    - run: opam install -t . --deps-only
    - run: opam exec -- dune build
    - run: opam exec -- dune runtest
      if: ${{ matrix.os == 'ubuntu-latest'}}

  format:
    name: format
    strategy:
      matrix:
        ocaml-compiler:
            - '5.1'
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@main
      - name: Use OCaml ${{ matrix.ocaml-compiler }}
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}
          dune-cache: true
          allow-prerelease-opam: true

      - run: opam install ocamlformat.0.24.1
      - run: opam exec -- make format-check
